type: object
title: GameEntry
description: |
  A game entry in FGI's game database.
properties:
  name:
    type: string
    description: |
      The name of the game.

      For English games, it should be `Game name`.

      For non-English games, it should be `English name / Original name` or `Original name`.
  description:
    type: string
    description: |
      The description of the game. In English.
  description-format:
    type: string
    enum:
      - plain
      - markdown
    description: |
      Game description should be `plain` (default) text or will be rendered by `markdown`.
  brief-description:
    type: string
    description: |
      A brief description of the game. In English. For English, the max size of brief-description is 480 characters and min size of brief-description is 200.
      brief-description will be used in standard list page.
      If you do not specify a brief-description, we will use first 480 characters from description.
  expuged:
    type: boolean
    description: |
      `true` if the game entry should be expuged.

      If the game is not expuged, do not add this property.
  replaced-by:
    type: string
    description: |
      A game ID who the owner has replaced this game.

      If the game is not replaced by another game, do not add this property.
  authors:
    type: array
    description: |
      The infomation about the author(s) of the game.
    items:
      type: object
      title: GameAuthor
      properties:
        name:
          type: string
          description: |
            The name of the author. If the author has been defined in author database, MUST use the name specified in `name` property in author datafile.
        standalone:
          type: boolean
          description: |
            `true` if this author is a standalone author.
            Standalone author is only in current game scope and do not generate tags, do not link with author database.
        role:
          description: |
            What role is the author playing around this game.
          type: array
          items:
            type: string
            enum:
              - producer
              - screenwriter
              - programmer
              - artist
              - musician
              - voice-actor
              - character-designer
              - scenographer
              - translator
              - publisher
              - others
      required: [ name, role ]
  tags:
    type: object
    title: TagDict
    description: |
      The tags of the game.
    patternProperties:
      "":
        type: array
        title: NamespaceTagArray
        description: |
          The key is the namespace name. Must be defined in `tags.yaml`.

          The value is a array of tags in the namespace.
        items:
          type: string
          description: |
            The tags name. Must be defined in `tags.yaml`.
  links:
    type: array
    items:
      type: object
      title: Link
      properties:
        name:
          type: string
          description: |
            A stock name (begin with .) or the English name of the link.
        icon:
          type: string
          title: IconName
          description: |
            Override the icon of the link.
        uri:
          type: string
          description: |
            The URI of the link.
        rel:
          type: string
          description: |
            The "rel" html element attribute.
      required: [ name, uri ]
  thumbnail:
    type: string
    description: |
      The path or URI of the thumbnail image of the game.
  sensitive_media:
    type: boolean
    description: |
      `true` if at last one of the screenshots is sensitive.

      WARNNING: This is a **deprecated** property.
      FGI will ignore this property and decide whether to add a sensitive media notification bar based on other information.
      It should not be used in newly edited game entries.
  auto-steam-widget:
    type: boolean
    description: |
      Default is `true` and FGI will use infomations in `links` to generate steam store widget media in screenshots. Specify `false` to disable it.
  screenshots:
    type: array
    description: |
      The screenshots or other related medias of the game.
    items:
      oneOf:
        - type: object
          title: ScreenshotImage
          description:
            An image. Sensitive or non-sensitive.
          properties:
            type:
              type: string
              const: image
              description: |
                Must be `image`. But you can make a object without `type` property, the object will have default type property `image`.
            sensitive:
              type: boolean
              description: |
                `true` if the image is sensitive
            uri:
              type: string
              description: |
                The path or the URI of the image.
          required: [ sensitive, uri ]
        - type: string
          title: ScreenshotBasicImage
          description:
            A non-sensitive image. The path or the URI of the image.
        - type: object
          title: ScreenshotYoutubeEmbeddedVideo
          description: |
            A embedded youtube video.
          properties:
            type:
              type: string
              const: youtube
              description: |
                Must be `youtube`
            id:
              type: string
              description: |
                Video ID of the youtube video, Required when you do not specify `uri`.
            sensitive:
              type: boolean
              description: |
                `true` if the media is sensitive
            uri:
              type: string
              description: |
                Must be `youtube:ID`. ID is the video's ID. Required when you do not specify `id`.

                WARNNING: This is a **deprecated** property.
                But FGI also supports it due to backward compatible.
                It should not be used in newly edited game entries.
          required: [ type ]
        - type: object
          title: ScreenshotHTMLEmbeddedVideo
          description: |
            A HTML embedded video.
          properties:
            type:
              type: string
              const: video
              description: |
                Must be `video`
            sensitive:
              type: boolean
              description: |
                `true` if the media is sensitive
            src:
              type: array
              items:
                type: object
                title: HTMLVideoSource
                properties:
                  mime:
                    type: string
                    description: |
                      The MIME type of the video source
                  uri:
                    type: string
                    description: |
                      The URI of the video
                required: [ mime, uri ]
          required: [ type, src ]
        - type: object
          title: ScreenshotSteamStoreWidget
          description: |
            A embedded Steam Store Widget.
          properties:
            type:
              type: string
              const: steam-widget
              description: |
                Must be `steam-widget`
            id:
              type: string
              description: |
                The ID of the game in Steam.
          required: [ type, id ]
  X-Created-by:
    type: string
    description: |
      Specify the actual contributor who creates the game entry.

      Use git commit infomation when not specified.

      This field should not used when the actual contributor uses git (not commited by the maintainer).

      Allow `name` or `name <email address>`
  X-Co-edited-by:
    type: array
    description: |
      Specify the actual contributors who edited the game entry (except X-Created-by).

      Use git commit infomation when not specified.

      This field should not used when the actual contributor uses git (not commited by the maintainer).

      Allow `name` or `name <email address>`
    contains:
      type: string
required: [ name, description, tags, links, thumbnail, screenshots ]
